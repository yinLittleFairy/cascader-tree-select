{
  "version": 3,
  "sources": ["../../scrollparent/scrollparent.js", "../../vue-resize/dist/vue-resize.esm.js", "../../vue-observe-visibility/dist/vue-observe-visibility.esm.js", "../../vue-virtual-scroller/src/config.js", "../../vue-virtual-scroller/src/components/common.js", "../../vue-virtual-scroller/src/utils.js", "../../vue-virtual-scroller/src/components/RecycleScroller.vue", "../../vue-virtual-scroller/src/components/DynamicScroller.vue", "../../vue-virtual-scroller/src/components/DynamicScrollerItem.vue", "../../vue-virtual-scroller/src/mixins/IdState.js", "../../vue-virtual-scroller/src/index.js"],
  "sourcesContent": ["(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(this, function () {\n  function isScrolling(node) {\n    var overflow = getComputedStyle(node, null).getPropertyValue(\"overflow\");\n\n    return overflow.indexOf(\"scroll\") > -1 || overflow.indexOf(\"auto\") > - 1;\n  }\n\n  function scrollParent(node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return undefined;\n    }\n\n    var current = node.parentNode;\n    while (current.parentNode) {\n      if (isScrolling(current)) {\n        return current;\n      }\n\n      current = current.parentNode;\n    }\n\n    return document.scrollingElement || document.documentElement;\n  }\n\n  return scrollParent;\n}));", "function getInternetExplorerVersion() {\n\tvar ua = window.navigator.userAgent;\n\n\tvar msie = ua.indexOf('MSIE ');\n\tif (msie > 0) {\n\t\t// IE 10 or older => return version number\n\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t}\n\n\tvar trident = ua.indexOf('Trident/');\n\tif (trident > 0) {\n\t\t// IE 11 => return version number\n\t\tvar rv = ua.indexOf('rv:');\n\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t}\n\n\tvar edge = ua.indexOf('Edge/');\n\tif (edge > 0) {\n\t\t// Edge (IE 12+) => return version number\n\t\treturn parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t}\n\n\t// other browser\n\treturn -1;\n}\n\nvar isIE = void 0;\n\nfunction initCompat() {\n\tif (!initCompat.init) {\n\t\tinitCompat.init = true;\n\t\tisIE = getInternetExplorerVersion() !== -1;\n\t}\n}\n\nvar ResizeObserver = { render: function render() {\n\t\tvar _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"resize-observer\", attrs: { \"tabindex\": \"-1\" } });\n\t}, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',\n\tname: 'resize-observer',\n\n\tmethods: {\n\t\tcompareAndNotify: function compareAndNotify() {\n\t\t\tif (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {\n\t\t\t\tthis._w = this.$el.offsetWidth;\n\t\t\t\tthis._h = this.$el.offsetHeight;\n\t\t\t\tthis.$emit('notify');\n\t\t\t}\n\t\t},\n\t\taddResizeHandlers: function addResizeHandlers() {\n\t\t\tthis._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);\n\t\t\tthis.compareAndNotify();\n\t\t},\n\t\tremoveResizeHandlers: function removeResizeHandlers() {\n\t\t\tif (this._resizeObject && this._resizeObject.onload) {\n\t\t\t\tif (!isIE && this._resizeObject.contentDocument) {\n\t\t\t\t\tthis._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);\n\t\t\t\t}\n\t\t\t\tdelete this._resizeObject.onload;\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tinitCompat();\n\t\tthis.$nextTick(function () {\n\t\t\t_this._w = _this.$el.offsetWidth;\n\t\t\t_this._h = _this.$el.offsetHeight;\n\t\t});\n\t\tvar object = document.createElement('object');\n\t\tthis._resizeObject = object;\n\t\tobject.setAttribute('aria-hidden', 'true');\n\t\tobject.setAttribute('tabindex', -1);\n\t\tobject.onload = this.addResizeHandlers;\n\t\tobject.type = 'text/html';\n\t\tif (isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t\tobject.data = 'about:blank';\n\t\tif (!isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t},\n\tbeforeDestroy: function beforeDestroy() {\n\t\tthis.removeResizeHandlers();\n\t}\n};\n\n// Install the components\nfunction install(Vue) {\n\tVue.component('resize-observer', ResizeObserver);\n\tVue.component('ResizeObserver', ResizeObserver);\n}\n\n// Plugin\nvar plugin = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.5\",\n\tinstall: install\n};\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue = global.Vue;\n}\nif (GlobalVue) {\n\tGlobalVue.use(plugin);\n}\n\nexport { install, ResizeObserver };\nexport default plugin;\n", "function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction processOptions(value) {\n  var options;\n\n  if (typeof value === 'function') {\n    // Simple options (callback-only)\n    options = {\n      callback: value\n    };\n  } else {\n    // Options object\n    options = value;\n  }\n\n  return options;\n}\nfunction throttle(callback, delay) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout;\n  var lastState;\n  var currentArgs;\n\n  var throttled = function throttled(state) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    currentArgs = args;\n    if (timeout && state === lastState) return;\n    var leading = options.leading;\n\n    if (typeof leading === 'function') {\n      leading = leading(state, lastState);\n    }\n\n    if ((!timeout || state !== lastState) && leading) {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n    }\n\n    lastState = state;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n      timeout = 0;\n    }, delay);\n  };\n\n  throttled._clear = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return throttled;\n}\nfunction deepEqual(val1, val2) {\n  if (val1 === val2) return true;\n\n  if (_typeof(val1) === 'object') {\n    for (var key in val1) {\n      if (!deepEqual(val1[key], val2[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar VisibilityState =\n/*#__PURE__*/\nfunction () {\n  function VisibilityState(el, options, vnode) {\n    _classCallCheck(this, VisibilityState);\n\n    this.el = el;\n    this.observer = null;\n    this.frozen = false;\n    this.createObserver(options, vnode);\n  }\n\n  _createClass(VisibilityState, [{\n    key: \"createObserver\",\n    value: function createObserver(options, vnode) {\n      var _this = this;\n\n      if (this.observer) {\n        this.destroyObserver();\n      }\n\n      if (this.frozen) return;\n      this.options = processOptions(options);\n\n      this.callback = function (result, entry) {\n        _this.options.callback(result, entry);\n\n        if (result && _this.options.once) {\n          _this.frozen = true;\n\n          _this.destroyObserver();\n        }\n      }; // Throttle\n\n\n      if (this.callback && this.options.throttle) {\n        var _ref = this.options.throttleOptions || {},\n            _leading = _ref.leading;\n\n        this.callback = throttle(this.callback, this.options.throttle, {\n          leading: function leading(state) {\n            return _leading === 'both' || _leading === 'visible' && state || _leading === 'hidden' && !state;\n          }\n        });\n      }\n\n      this.oldResult = undefined;\n      this.observer = new IntersectionObserver(function (entries) {\n        var entry = entries[0];\n\n        if (entries.length > 1) {\n          var intersectingEntry = entries.find(function (e) {\n            return e.isIntersecting;\n          });\n\n          if (intersectingEntry) {\n            entry = intersectingEntry;\n          }\n        }\n\n        if (_this.callback) {\n          // Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n          var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n          if (result === _this.oldResult) return;\n          _this.oldResult = result;\n\n          _this.callback(result, entry);\n        }\n      }, this.options.intersection); // Wait for the element to be in document\n\n      vnode.context.$nextTick(function () {\n        if (_this.observer) {\n          _this.observer.observe(_this.el);\n        }\n      });\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      } // Cancel throttled call\n\n\n      if (this.callback && this.callback._clear) {\n        this.callback._clear();\n\n        this.callback = null;\n      }\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return this.options.intersection && this.options.intersection.threshold || 0;\n    }\n  }]);\n\n  return VisibilityState;\n}();\n\nfunction bind(el, _ref2, vnode) {\n  var value = _ref2.value;\n  if (!value) return;\n\n  if (typeof IntersectionObserver === 'undefined') {\n    console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n  } else {\n    var state = new VisibilityState(el, value, vnode);\n    el._vue_visibilityState = state;\n  }\n}\n\nfunction update(el, _ref3, vnode) {\n  var value = _ref3.value,\n      oldValue = _ref3.oldValue;\n  if (deepEqual(value, oldValue)) return;\n  var state = el._vue_visibilityState;\n\n  if (!value) {\n    unbind(el);\n    return;\n  }\n\n  if (state) {\n    state.createObserver(value, vnode);\n  } else {\n    bind(el, {\n      value: value\n    }, vnode);\n  }\n}\n\nfunction unbind(el) {\n  var state = el._vue_visibilityState;\n\n  if (state) {\n    state.destroyObserver();\n    delete el._vue_visibilityState;\n  }\n}\n\nvar ObserveVisibility = {\n  bind: bind,\n  update: update,\n  unbind: unbind\n};\n\nfunction install(Vue) {\n  Vue.directive('observe-visibility', ObserveVisibility);\n  /* -- Add more components here -- */\n}\n/* -- Plugin definition & Auto-install -- */\n\n/* You shouldn't have to modify the code below */\n// Plugin\n\nvar plugin = {\n  // eslint-disable-next-line no-undef\n  version: \"0.4.6\",\n  install: install\n};\n\nvar GlobalVue = null;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nexport default plugin;\nexport { ObserveVisibility, install };\n", "export default {\n  itemsLimit: 1000,\n}\n", "export const props = {\n  items: {\n    type: Array,\n    required: true,\n  },\n\n  keyField: {\n    type: String,\n    default: 'id',\n  },\n\n  direction: {\n    type: String,\n    default: 'vertical',\n    validator: (value) => ['vertical', 'horizontal'].includes(value),\n  },\n\n  listTag: {\n    type: String,\n    default: 'div',\n  },\n\n  itemTag: {\n    type: String,\n    default: 'div',\n  },\n}\n\nexport function simpleArray () {\n  return this.items.length && typeof this.items[0] !== 'object'\n}\n", "export let supportsPassive = false\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supportsPassive = true\n      },\n    })\n    window.addEventListener('test', null, opts)\n  } catch (e) {}\n}\n", "<template>\n  <div\n    v-observe-visibility=\"handleVisibilityChange\"\n    class=\"vue-recycle-scroller\"\n    :class=\"{\n      ready,\n      'page-mode': pageMode,\n      [`direction-${direction}`]: true,\n    }\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <div\n      v-if=\"$slots.before\"\n      ref=\"before\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"before\"\n      />\n    </div>\n\n    <component\n      :is=\"listTag\"\n      ref=\"wrapper\"\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\n      class=\"vue-recycle-scroller__item-wrapper\"\n      :class=\"listClass\"\n    >\n      <component\n        :is=\"itemTag\"\n        v-for=\"view of pool\"\n        :key=\"view.nr.id\"\n        :style=\"ready ? {\n          transform: `translate${direction === 'vertical' ? 'Y' : 'X'}(${view.position}px) translate${direction === 'vertical' ? 'X' : 'Y'}(${view.offset}px)`,\n          width: gridItems ? `${direction === 'vertical' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n          height: gridItems ? `${direction === 'horizontal' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n        } : null\"\n        class=\"vue-recycle-scroller__item-view\"\n        :class=\"[\n          itemClass,\n          {\n            hover: !skipHover && hoverKey === view.nr.key\n          },\n        ]\"\n        v-on=\"skipHover ? {} : {\n          mouseenter: () => { hoverKey = view.nr.key },\n          mouseleave: () => { hoverKey = null },\n        }\"\n      >\n        <slot\n          :item=\"view.item\"\n          :index=\"view.nr.index\"\n          :active=\"view.nr.used\"\n        />\n      </component>\n\n      <slot\n        name=\"empty\"\n      />\n    </component>\n\n    <div\n      v-if=\"$slots.after\"\n      ref=\"after\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"after\"\n      />\n    </div>\n\n    <ResizeObserver @notify=\"handleResize\" />\n  </div>\n</template>\n\n<script>\nimport { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport config from '../config'\nimport { props, simpleArray } from './common'\nimport { supportsPassive } from '../utils'\n\nlet uid = 0\n\nexport default {\n  name: 'RecycleScroller',\n\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    ...props,\n\n    itemSize: {\n      type: Number,\n      default: null,\n    },\n\n    gridItems: {\n      type: Number,\n      default: undefined,\n    },\n\n    itemSecondarySize: {\n      type: Number,\n      default: undefined,\n    },\n\n    minItemSize: {\n      type: [Number, String],\n      default: null,\n    },\n\n    sizeField: {\n      type: String,\n      default: 'size',\n    },\n\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n\n    buffer: {\n      type: Number,\n      default: 200,\n    },\n\n    pageMode: {\n      type: Boolean,\n      default: false,\n    },\n\n    prerender: {\n      type: Number,\n      default: 0,\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n\n    skipHover: {\n      type: Boolean,\n      default: false,\n    },\n\n    listTag: {\n      type: String,\n      default: 'div',\n    },\n\n    itemTag: {\n      type: String,\n      default: 'div',\n    },\n\n    listClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n\n    itemClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n  },\n\n  data () {\n    return {\n      pool: [],\n      totalSize: 0,\n      ready: false,\n      hoverKey: null,\n    }\n  },\n\n  computed: {\n    sizes () {\n      if (this.itemSize === null) {\n        const sizes = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.sizeField\n        const minItemSize = this.minItemSize\n        let computedMinSize = 10000\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemSize\n          if (current < computedMinSize) {\n            computedMinSize = current\n          }\n          accumulator += current\n          sizes[i] = { accumulator, size: current }\n        }\n        // eslint-disable-next-line\n        this.$_computedMinItemSize = computedMinSize\n        return sizes\n      }\n      return []\n    },\n\n    simpleArray,\n  },\n\n  watch: {\n    items () {\n      this.updateVisibleItems(true)\n    },\n\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(false)\n    },\n\n    sizes: {\n      handler () {\n        this.updateVisibleItems(false)\n      },\n      deep: true,\n    },\n\n    gridItems () {\n      this.updateVisibleItems(true)\n    },\n\n    itemSecondarySize () {\n      this.updateVisibleItems(true)\n    },\n  },\n\n  created () {\n    this.$_startIndex = 0\n    this.$_endIndex = 0\n    this.$_views = new Map()\n    this.$_unusedViews = new Map()\n    this.$_scrollDirty = false\n    this.$_lastUpdateScrollPosition = 0\n\n    // In SSR mode, we also prerender the same number of item for the first render\n    // to avoir mismatch between server and client templates\n    if (this.prerender) {\n      this.$_prerender = true\n      this.updateVisibleItems(false)\n    }\n\n    if (this.gridItems && !this.itemSize) {\n      console.error('[vue-recycle-scroller] You must provide an itemSize when using gridItems')\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      // In SSR mode, render the real number of visible items\n      this.$_prerender = false\n      this.updateVisibleItems(true)\n      this.ready = true\n    })\n  },\n\n  activated () {\n    const lastPosition = this.$_lastUpdateScrollPosition\n    if (typeof lastPosition === 'number') {\n      this.$nextTick(() => {\n        this.scrollToPosition(lastPosition)\n      })\n    }\n  },\n\n  beforeDestroy () {\n    this.removeListeners()\n  },\n\n  methods: {\n    addView (pool, index, item, key, type) {\n      const view = {\n        item,\n        position: 0,\n      }\n      const nonReactive = {\n        id: uid++,\n        index,\n        used: true,\n        key,\n        type,\n      }\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive,\n      })\n      pool.push(view)\n      return view\n    },\n\n    unuseView (view, fake = false) {\n      const unusedViews = this.$_unusedViews\n      const type = view.nr.type\n      let unusedPool = unusedViews.get(type)\n      if (!unusedPool) {\n        unusedPool = []\n        unusedViews.set(type, unusedPool)\n      }\n      unusedPool.push(view)\n      if (!fake) {\n        view.nr.used = false\n        view.position = -9999\n        this.$_views.delete(view.nr.key)\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      if (this.ready) this.updateVisibleItems(false)\n    },\n\n    handleScroll (event) {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          const { continuous } = this.updateVisibleItems(false, true)\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n          if (!continuous) {\n            clearTimeout(this.$_refreshTimout)\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\n          }\n        })\n      }\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible')\n          requestAnimationFrame(() => {\n            this.updateVisibleItems(false)\n          })\n        } else {\n          this.$emit('hidden')\n        }\n      }\n    },\n\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\n      const itemSize = this.itemSize\n      const gridItems = this.gridItems || 1\n      const itemSecondarySize = this.itemSecondarySize || itemSize\n      const minItemSize = this.$_computedMinItemSize\n      const typeField = this.typeField\n      const keyField = this.simpleArray ? null : this.keyField\n      const items = this.items\n      const count = items.length\n      const sizes = this.sizes\n      const views = this.$_views\n      const unusedViews = this.$_unusedViews\n      const pool = this.pool\n      let startIndex, endIndex\n      let totalSize\n      let visibleStartIndex, visibleEndIndex\n\n      if (!count) {\n        startIndex = endIndex = visibleStartIndex = visibleEndIndex = totalSize = 0\n      } else if (this.$_prerender) {\n        startIndex = visibleStartIndex = 0\n        endIndex = visibleEndIndex = Math.min(this.prerender, items.length)\n        totalSize = null\n      } else {\n        const scroll = this.getScroll()\n\n        // Skip update if use hasn't scrolled enough\n        if (checkPositionDiff) {\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\n          if (positionDiff < 0) positionDiff = -positionDiff\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\n            return {\n              continuous: true,\n            }\n          }\n        }\n        this.$_lastUpdateScrollPosition = scroll.start\n\n        const buffer = this.buffer\n        scroll.start -= buffer\n        scroll.end += buffer\n\n        // account for leading slot\n        let beforeSize = 0\n        if (this.$refs.before) {\n          beforeSize = this.$refs.before.scrollHeight\n          scroll.start -= beforeSize\n        }\n\n        // account for trailing slot\n        if (this.$refs.after) {\n          const afterSize = this.$refs.after.scrollHeight\n          scroll.end += afterSize\n        }\n\n        // Variable size mode\n        if (itemSize === null) {\n          let h\n          let a = 0\n          let b = count - 1\n          let i = ~~(count / 2)\n          let oldI\n\n          // Searching for startIndex\n          do {\n            oldI = i\n            h = sizes[i].accumulator\n            if (h < scroll.start) {\n              a = i\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\n              b = i\n            }\n            i = ~~((a + b) / 2)\n          } while (i !== oldI)\n          i < 0 && (i = 0)\n          startIndex = i\n\n          // For container style\n          totalSize = sizes[count - 1].accumulator\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\n          if (endIndex === -1) {\n            endIndex = items.length - 1\n          } else {\n            endIndex++\n            // Bounds\n            endIndex > count && (endIndex = count)\n          }\n\n          // search visible startIndex\n          for (visibleStartIndex = startIndex; visibleStartIndex < count && (beforeSize + sizes[visibleStartIndex].accumulator) < scroll.start; visibleStartIndex++);\n\n          // search visible endIndex\n          for (visibleEndIndex = visibleStartIndex; visibleEndIndex < count && (beforeSize + sizes[visibleEndIndex].accumulator) < scroll.end; visibleEndIndex++);\n        } else {\n          // Fixed size mode\n          startIndex = ~~(scroll.start / itemSize * gridItems)\n          const remainer = startIndex % gridItems\n          startIndex -= remainer\n          endIndex = Math.ceil(scroll.end / itemSize * gridItems)\n          visibleStartIndex = Math.max(0, Math.floor((scroll.start - beforeSize) / itemSize * gridItems))\n          visibleEndIndex = Math.floor((scroll.end - beforeSize) / itemSize * gridItems)\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0)\n          endIndex > count && (endIndex = count)\n          visibleStartIndex < 0 && (visibleStartIndex = 0)\n          visibleEndIndex > count && (visibleEndIndex = count)\n\n          totalSize = Math.ceil(count / gridItems) * itemSize\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError()\n      }\n\n      this.totalSize = totalSize\n\n      let view\n\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear()\n          unusedViews.clear()\n          for (let i = 0, l = pool.length; i < l; i++) {\n            view = pool[i]\n            this.unuseView(view)\n          }\n        }\n        this.$_continuous = continuous\n      } else if (continuous) {\n        for (let i = 0, l = pool.length; i < l; i++) {\n          view = pool[i]\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.indexOf(view.item)\n            }\n\n            // Check if index is still in visible range\n            if (\n              view.nr.index === -1 ||\n              view.nr.index < startIndex ||\n              view.nr.index >= endIndex\n            ) {\n              this.unuseView(view)\n            }\n          }\n        }\n      }\n\n      const unusedIndex = continuous ? null : new Map()\n\n      let item, type, unusedPool\n      let v\n      for (let i = startIndex; i < endIndex; i++) {\n        item = items[i]\n        const key = keyField ? item[keyField] : item\n        if (key == null) {\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\n        }\n        view = views.get(key)\n\n        if (!itemSize && !sizes[i].size) {\n          if (view) this.unuseView(view)\n          continue\n        }\n\n        // No view assigned to item\n        if (!view) {\n          if (i === items.length - 1) this.$emit('scroll-end')\n          if (i === 0) this.$emit('scroll-start')\n\n          type = item[typeField]\n          unusedPool = unusedViews.get(type)\n\n          if (continuous) {\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop()\n              view.item = item\n              view.nr.used = true\n              view.nr.index = i\n              view.nr.key = key\n              view.nr.type = type\n            } else {\n              view = this.addView(pool, i, item, key, type)\n            }\n          } else {\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            v = unusedIndex.get(type) || 0\n\n            if (!unusedPool || v >= unusedPool.length) {\n              view = this.addView(pool, i, item, key, type)\n              this.unuseView(view, true)\n              unusedPool = unusedViews.get(type)\n            }\n\n            view = unusedPool[v]\n            view.item = item\n            view.nr.used = true\n            view.nr.index = i\n            view.nr.key = key\n            view.nr.type = type\n            unusedIndex.set(type, v + 1)\n            v++\n          }\n          views.set(key, view)\n        } else {\n          view.nr.used = true\n          view.item = item\n        }\n\n        // Update position\n        if (itemSize === null) {\n          view.position = sizes[i - 1].accumulator\n          view.offset = 0\n        } else {\n          view.position = Math.floor(i / gridItems) * itemSize\n          view.offset = (i % gridItems) * itemSecondarySize\n        }\n      }\n\n      this.$_startIndex = startIndex\n      this.$_endIndex = endIndex\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex, visibleStartIndex, visibleEndIndex)\n\n      // After the user has finished scrolling\n      // Sort views so text selection is correct\n      clearTimeout(this.$_sortTimer)\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\n\n      return {\n        continuous,\n      }\n    },\n\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const { $el: el, direction } = this\n      const isVertical = direction === 'vertical'\n      let scrollState\n\n      if (this.pageMode) {\n        const bounds = el.getBoundingClientRect()\n        const boundsSize = isVertical ? bounds.height : bounds.width\n        let start = -(isVertical ? bounds.top : bounds.left)\n        let size = isVertical ? window.innerHeight : window.innerWidth\n        if (start < 0) {\n          size += start\n          start = 0\n        }\n        if (start + size > boundsSize) {\n          size = boundsSize - start\n        }\n        scrollState = {\n          start,\n          end: start + size,\n        }\n      } else if (isVertical) {\n        scrollState = {\n          start: el.scrollTop,\n          end: el.scrollTop + el.clientHeight,\n        }\n      } else {\n        scrollState = {\n          start: el.scrollLeft,\n          end: el.scrollLeft + el.clientWidth,\n        }\n      }\n\n      return scrollState\n    },\n\n    applyPageMode () {\n      if (this.pageMode) {\n        this.addListeners()\n      } else {\n        this.removeListeners()\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive\n        ? {\n            passive: true,\n          }\n        : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = Math.floor(index / this.gridItems) * this.itemSize\n      }\n      this.scrollToPosition(scroll)\n    },\n\n    scrollToPosition (position) {\n      const direction = this.direction === 'vertical'\n        ? { scroll: 'scrollTop', start: 'top' }\n        : { scroll: 'scrollLeft', start: 'left' }\n\n      let viewport\n      let scrollDirection\n      let scrollDistance\n\n      if (this.pageMode) {\n        const viewportEl = ScrollParent(this.$el)\n        // HTML doesn't overflow like other elements\n        const scrollTop = viewportEl.tagName === 'HTML' ? 0 : viewportEl[direction.scroll]\n        const bounds = viewportEl.getBoundingClientRect()\n\n        const scroller = this.$el.getBoundingClientRect()\n        const scrollerPosition = scroller[direction.start] - bounds[direction.start]\n\n        viewport = viewportEl\n        scrollDirection = direction.scroll\n        scrollDistance = position + scrollTop + scrollerPosition\n      } else {\n        viewport = this.$el\n        scrollDirection = direction.scroll\n        scrollDistance = position\n      }\n\n      viewport[scrollDirection] = scrollDistance\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n\n    sortViews () {\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\n    },\n  },\n}\n</script>\n\n<style>\n.vue-recycle-scroller {\n  position: relative;\n}\n\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\n  overflow-x: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal {\n  display: flex;\n}\n\n.vue-recycle-scroller__slot {\n  flex: auto 0 0;\n}\n\n.vue-recycle-scroller__item-wrapper {\n  flex: 1;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n}\n\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\n  position: absolute;\n  top: 0;\n  left: 0;\n  will-change: transform;\n}\n\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\n  width: 100%;\n}\n\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\n  height: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\n  width: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\n  height: 100%;\n}\n</style>\n", "<template>\n  <RecycleScroller\n    ref=\"scroller\"\n    :items=\"itemsWithSize\"\n    :min-item-size=\"minItemSize\"\n    :direction=\"direction\"\n    key-field=\"id\"\n    :list-tag=\"listTag\"\n    :item-tag=\"itemTag\"\n    v-bind=\"$attrs\"\n    @resize=\"onScrollerResize\"\n    @visible=\"onScrollerVisible\"\n    v-on=\"listeners\"\n  >\n    <template slot-scope=\"{ item: itemWithSize, index, active }\">\n      <slot\n        v-bind=\"{\n          item: itemWithSize.item,\n          index,\n          active,\n          itemWithSize\n        }\"\n      />\n    </template>\n    <template slot=\"before\">\n      <slot name=\"before\" />\n    </template>\n    <template slot=\"after\">\n      <slot name=\"after\" />\n    </template>\n    <template slot=\"empty\">\n      <slot name=\"empty\" />\n    </template>\n  </RecycleScroller>\n</template>\n\n<script>\nimport RecycleScroller from './RecycleScroller.vue'\nimport { props, simpleArray } from './common'\n\nexport default {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller,\n  },\n\n  provide () {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.$_resizeObserver = new ResizeObserver(entries => {\n        requestAnimationFrame(() => {\n          if (!Array.isArray(entries)) {\n            return\n          }\n          for (const entry of entries) {\n            if (entry.target) {\n              const event = new CustomEvent(\n                'resize',\n                {\n                  detail: {\n                    contentRect: entry.contentRect,\n                  },\n                },\n              )\n              entry.target.dispatchEvent(event)\n            }\n          }\n        })\n      })\n    }\n\n    return {\n      vscrollData: this.vscrollData,\n      vscrollParent: this,\n      vscrollResizeObserver: this.$_resizeObserver,\n    }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    ...props,\n\n    minItemSize: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      vscrollData: {\n        active: true,\n        sizes: {},\n        validSizes: {},\n        keyField: this.keyField,\n        simpleArray: false,\n      },\n    }\n  },\n\n  computed: {\n    simpleArray,\n\n    itemsWithSize () {\n      const result = []\n      const { items, keyField, simpleArray } = this\n      const sizes = this.vscrollData.sizes\n      const l = items.length\n      for (let i = 0; i < l; i++) {\n        const item = items[i]\n        const id = simpleArray ? i : item[keyField]\n        let size = sizes[id]\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\n          size = 0\n        }\n        result.push({\n          item,\n          id,\n          size,\n        })\n      }\n      return result\n    },\n\n    listeners () {\n      const listeners = {}\n      for (const key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key]\n        }\n      }\n      return listeners\n    },\n  },\n\n  watch: {\n    items () {\n      this.forceUpdate(false)\n    },\n\n    simpleArray: {\n      handler (value) {\n        this.vscrollData.simpleArray = value\n      },\n      immediate: true,\n    },\n\n    direction (value) {\n      this.forceUpdate(true)\n    },\n\n    itemsWithSize (next, prev) {\n      const scrollTop = this.$el.scrollTop\n\n      // Calculate total diff between prev and next sizes\n      // over current scroll top. Then add it to scrollTop to\n      // avoid jumping the contents that the user is seeing.\n      let prevActiveTop = 0; let activeTop = 0\n      const length = Math.min(next.length, prev.length)\n      for (let i = 0; i < length; i++) {\n        if (prevActiveTop >= scrollTop) {\n          break\n        }\n        prevActiveTop += prev[i].size || this.minItemSize\n        activeTop += next[i].size || this.minItemSize\n      }\n      const offset = activeTop - prevActiveTop\n\n      if (offset === 0) {\n        return\n      }\n\n      this.$el.scrollTop += offset\n    },\n  },\n\n  beforeCreate () {\n    this.$_updates = []\n    this.$_undefinedSizes = 0\n    this.$_undefinedMap = {}\n  },\n\n  activated () {\n    this.vscrollData.active = true\n  },\n\n  deactivated () {\n    this.vscrollData.active = false\n  },\n\n  methods: {\n    onScrollerResize () {\n      const scroller = this.$refs.scroller\n      if (scroller) {\n        this.forceUpdate()\n      }\n      this.$emit('resize')\n    },\n\n    onScrollerVisible () {\n      this.$emit('vscroll:update', { force: false })\n      this.$emit('visible')\n    },\n\n    forceUpdate (clear = true) {\n      if (clear || this.simpleArray) {\n        this.vscrollData.validSizes = {}\n      }\n      this.$emit('vscroll:update', { force: true })\n    },\n\n    scrollToItem (index) {\n      const scroller = this.$refs.scroller\n      if (scroller) scroller.scrollToItem(index)\n    },\n\n    getItemSize (item, index = undefined) {\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\n      return this.vscrollData.sizes[id] || 0\n    },\n\n    scrollToBottom () {\n      if (this.$_scrollingToBottom) return\n      this.$_scrollingToBottom = true\n      const el = this.$el\n      // Item is inserted to the DOM\n      this.$nextTick(() => {\n        el.scrollTop = el.scrollHeight + 5000\n        // Item sizes are computed\n        const cb = () => {\n          el.scrollTop = el.scrollHeight + 5000\n          requestAnimationFrame(() => {\n            el.scrollTop = el.scrollHeight + 5000\n            if (this.$_undefinedSizes === 0) {\n              this.$_scrollingToBottom = false\n            } else {\n              requestAnimationFrame(cb)\n            }\n          })\n        }\n        requestAnimationFrame(cb)\n      })\n    },\n  },\n}\n</script>\n", "<script>\nexport default {\n  name: 'DynamicScrollerItem',\n\n  inject: [\n    'vscrollData',\n    'vscrollParent',\n    'vscrollResizeObserver',\n  ],\n\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    item: {\n      required: true,\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Indicates if the view is actively used to display an item.\n     */\n    active: {\n      type: Boolean,\n      required: true,\n    },\n\n    index: {\n      type: Number,\n      default: undefined,\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null,\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false,\n    },\n\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    id () {\n      if (this.vscrollData.simpleArray) return this.index\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.item.hasOwnProperty(this.vscrollData.keyField)) return this.item[this.vscrollData.keyField]\n      throw new Error(`keyField '${this.vscrollData.keyField}' not found in your item. You should set a valid keyField prop on your Scroller`)\n    },\n\n    size () {\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\n    },\n\n    finalActive () {\n      return this.active && this.vscrollData.active\n    },\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id () {\n      if (!this.size) {\n        this.onDataUpdate()\n      }\n    },\n\n    finalActive (value) {\n      if (!this.size) {\n        if (value) {\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes++\n            this.vscrollParent.$_undefinedMap[this.id] = true\n          }\n        } else {\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes--\n            this.vscrollParent.$_undefinedMap[this.id] = false\n          }\n        }\n      }\n\n      if (this.vscrollResizeObserver) {\n        if (value) {\n          this.observeSize()\n        } else {\n          this.unobserveSize()\n        }\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\n        this.updateSize()\n      }\n    },\n  },\n\n  created () {\n    if (this.$isServer) return\n\n    this.$_forceNextVScrollUpdate = null\n    this.updateWatchData()\n\n    if (!this.vscrollResizeObserver) {\n      for (const k in this.sizeDependencies) {\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\n      }\n\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\n    }\n  },\n\n  mounted () {\n    if (this.vscrollData.active) {\n      this.updateSize()\n      this.observeSize()\n    }\n  },\n\n  beforeDestroy () {\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\n    this.unobserveSize()\n  },\n\n  methods: {\n    updateSize () {\n      if (this.finalActive) {\n        if (this.$_pendingSizeUpdate !== this.id) {\n          this.$_pendingSizeUpdate = this.id\n          this.$_forceNextVScrollUpdate = null\n          this.$_pendingVScrollUpdate = null\n          this.computeSize(this.id)\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = this.id\n      }\n    },\n\n    updateWatchData () {\n      if (this.watchData && !this.vscrollResizeObserver) {\n        this.$_watchData = this.$watch('item', () => {\n          this.onDataUpdate()\n        }, {\n          deep: true,\n        })\n      } else if (this.$_watchData) {\n        this.$_watchData()\n        this.$_watchData = null\n      }\n    },\n\n    onVscrollUpdate ({ force }) {\n      // If not active, sechedule a size update when it becomes active\n      if (!this.finalActive && force) {\n        this.$_pendingVScrollUpdate = this.id\n      }\n\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\n        this.updateSize()\n      }\n    },\n\n    onDataUpdate () {\n      this.updateSize()\n    },\n\n    computeSize (id) {\n      this.$nextTick(() => {\n        if (this.id === id) {\n          const width = this.$el.offsetWidth\n          const height = this.$el.offsetHeight\n          this.applySize(width, height)\n        }\n        this.$_pendingSizeUpdate = null\n      })\n    },\n\n    applySize (width, height) {\n      const size = ~~(this.vscrollParent.direction === 'vertical' ? height : width)\n      if (size && this.size !== size) {\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\n          this.vscrollParent.$_undefinedSizes--\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\n        }\n        this.$set(this.vscrollData.sizes, this.id, size)\n        this.$set(this.vscrollData.validSizes, this.id, true)\n        if (this.emitResize) this.$emit('resize', this.id)\n      }\n    },\n\n    observeSize () {\n      if (!this.vscrollResizeObserver || !this.$el.parentNode) return\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\n      this.$el.parentNode.addEventListener('resize', this.onResize)\n    },\n\n    unobserveSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\n    },\n\n    onResize (event) {\n      const { width, height } = event.detail.contentRect\n      this.applySize(width, height)\n    },\n  },\n\n  render (h) {\n    return h(this.tag, this.$slots.default)\n  },\n}\n</script>\n", "import Vue from 'vue'\n\nexport default function ({\n  idProp = vm => vm.item.id,\n} = {}) {\n  const store = {}\n  const vm = new Vue({\n    data () {\n      return {\n        store,\n      }\n    },\n  })\n\n  // @vue/component\n  return {\n    data () {\n      return {\n        idState: null,\n      }\n    },\n\n    created () {\n      this.$_id = null\n      if (typeof idProp === 'function') {\n        this.$_getId = () => idProp.call(this, this)\n      } else {\n        this.$_getId = () => this[idProp]\n      }\n      this.$watch(this.$_getId, {\n        handler (value) {\n          this.$nextTick(() => {\n            this.$_id = value\n          })\n        },\n        immediate: true,\n      })\n      this.$_updateIdState()\n    },\n\n    beforeUpdate () {\n      this.$_updateIdState()\n    },\n\n    methods: {\n      /**\n       * Initialize an idState\n       * @param {number|string} id Unique id for the data\n       */\n      $_idStateInit (id) {\n        const factory = this.$options.idState\n        if (typeof factory === 'function') {\n          const data = factory.call(this, this)\n          vm.$set(store, id, data)\n          this.$_id = id\n          return data\n        } else {\n          throw new Error('[mixin IdState] Missing `idState` function on component definition.')\n        }\n      },\n\n      /**\n       * Ensure idState is created and up-to-date\n       */\n      $_updateIdState () {\n        const id = this.$_getId()\n        if (id == null) {\n          console.warn(`No id found for IdState with idProp: '${idProp}'.`)\n        }\n        if (id !== this.$_id) {\n          if (!store[id]) {\n            this.$_idStateInit(id)\n          }\n          this.idState = store[id]\n        }\n      },\n    },\n  }\n}\n", "import config from './config'\n\nimport RecycleScroller from './components/RecycleScroller.vue'\nimport DynamicScroller from './components/DynamicScroller.vue'\nimport DynamicScrollerItem from './components/DynamicScrollerItem.vue'\n\nexport { default as IdState } from './mixins/IdState'\n\nexport {\n  RecycleScroller,\n  DynamicScroller,\n  DynamicScrollerItem,\n}\n\nfunction registerComponents (Vue, prefix) {\n  Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\n  Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\n  Vue.component(`${prefix}dynamic-scroller`, DynamicScroller)\n  Vue.component(`${prefix}DynamicScroller`, DynamicScroller)\n  Vue.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\n  Vue.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\n}\n\nconst plugin = {\n  // eslint-disable-next-line no-undef\n  version: VERSION,\n  install (Vue, options) {\n    const finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: '',\n    }, options)\n\n    for (const key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key]\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(Vue, finalOptions.componentsPrefix)\n    }\n  },\n}\n\nexport default plugin\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n"],
  "mappings": "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",
  "names": ["ResizeObserver", "Vue", "obj", "props", "throttled", "VisibilityState", "install", "Vue", "plugin", "GlobalVue", "itemsLimit", "props", "items", "type", "Array", "required", "keyField", "String", "default", "direction", "validator", "value", "includes", "listTag", "itemTag", "simpleArray", "length", "supportsPassive", "window", "opts", "Object", "defineProperty", "get", "addEventListener", "e", "uid", "name", "components", "ResizeObserver", "directives", "ObserveVisibility", "itemSize", "Number", "gridItems", "undefined", "itemSecondarySize", "minItemSize", "sizeField", "typeField", "buffer", "pageMode", "Boolean", "prerender", "emitUpdate", "skipHover", "listClass", "itemClass", "data", "pool", "totalSize", "ready", "hoverKey", "computed", "sizes", "accumulator", "field", "computedMinSize", "current", "i", "l", "size", "$_computedMinItemSize", "watch", "updateVisibleItems", "applyPageMode", "handler", "deep", "created", "$_startIndex", "$_endIndex", "$_views", "Map", "$_unusedViews", "$_scrollDirty", "$_lastUpdateScrollPosition", "$_prerender", "console", "error", "mounted", "$nextTick", "activated", "lastPosition", "scrollToPosition", "beforeDestroy", "removeListeners", "methods", "addView", "index", "item", "key", "view", "position", "nonReactive", "id", "used", "configurable", "push", "unuseView", "fake", "unusedViews", "nr", "unusedPool", "set", "delete", "handleResize", "$emit", "handleScroll", "event", "requestAnimationFrame", "continuous", "clearTimeout", "$_refreshTimout", "setTimeout", "handleVisibilityChange", "isVisible", "entry", "boundingClientRect", "width", "height", "checkItem", "checkPositionDiff", "count", "views", "startIndex", "endIndex", "visibleStartIndex", "visibleEndIndex", "Math", "min", "scroll", "getScroll", "positionDiff", "start", "end", "beforeSize", "$refs", "before", "scrollHeight", "after", "afterSize", "h", "a", "b", "oldI", "remainer", "ceil", "max", "floor", "config", "itemsLimitError", "$_continuous", "clear", "indexOf", "unusedIndex", "v", "Error", "pop", "offset", "$_sortTimer", "sortViews", "getListenerTarget", "target", "ScrollParent", "$el", "document", "documentElement", "body", "el", "isVertical", "scrollState", "bounds", "getBoundingClientRect", "boundsSize", "top", "left", "innerHeight", "innerWidth", "scrollTop", "clientHeight", "scrollLeft", "clientWidth", "addListeners", "listenerTarget", "passive", "removeEventListener", "scrollToItem", "viewport", "scrollDirection", "scrollDistance", "viewportEl", "tagName", "scroller", "scrollerPosition", "log", "sort", "viewA", "viewB", "__vue_script__", "script", "RecycleScroller", "provide", "$_resizeObserver", "entries", "isArray", "CustomEvent", "detail", "contentRect", "dispatchEvent", "vscrollData", "vscrollParent", "vscrollResizeObserver", "inheritAttrs", "active", "validSizes", "itemsWithSize", "result", "$_undefinedMap", "listeners", "$listeners", "forceUpdate", "immediate", "next", "prev", "prevActiveTop", "activeTop", "beforeCreate", "$_updates", "$_undefinedSizes", "deactivated", "onScrollerResize", "onScrollerVisible", "force", "getItemSize", "scrollToBottom", "$_scrollingToBottom", "cb", "inject", "watchData", "sizeDependencies", "emitResize", "tag", "hasOwnProperty", "finalActive", "onDataUpdate", "observeSize", "unobserveSize", "$_pendingVScrollUpdate", "updateSize", "$isServer", "$_forceNextVScrollUpdate", "updateWatchData", "k", "$watch", "$on", "onVscrollUpdate", "onVscrollUpdateSize", "$off", "$_pendingSizeUpdate", "computeSize", "$_watchData", "offsetWidth", "offsetHeight", "applySize", "$set", "parentNode", "observe", "onResize", "unobserve", "render", "$slots", "idProp", "vm", "store", "Vue", "idState", "$_id", "$_getId", "call", "$_updateIdState", "beforeUpdate", "$_idStateInit", "factory", "$options", "warn", "registerComponents", "prefix", "component", "DynamicScroller", "DynamicScrollerItem", "plugin", "version", "VERSION", "install", "options", "finalOptions", "assign", "installComponents", "componentsPrefix", "GlobalVue", "global", "use"]
}
